version: 2.1

# -------------------------------------------------------------------------------------
# Executors
# -------------------------------------------------------------------------------------
executors:
  gpu_cuda10:
    environment:
      CUDA_VERSION: "10.2"
      CUDA_HOME: "/usr/local/cuda"
      DEBIAN_FRONTEND: noninteractive
    machine:
      image: ubuntu-2004:202111-02 # 202107-02 # 2022.07.1
      docker_layer_caching: true
    resource_class: gpu.nvidia.small.multi # NVIDIA Tesla T4 2 GPU 4 vCPUs 15 GB RAM

  gpu_cuda11:
    environment:
      CUDA_VERSION: "11.7"
      CUDA_HOME: "/usr/local/cuda"
      DEBIAN_FRONTEND: noninteractive
      CUDA_MODULE_LOADING: LAZY
    machine:
      image: ubuntu-2004:202111-02 # 2204:2022.07.1
      docker_layer_caching: true
    resource_class: gpu.nvidia.small.multi # NVIDIA Tesla T4 2 GPU 4 vCPUs 15 GB RAM

  cpu_only:
    environment:
      DEBIAN_FRONTEND: noninteractive
    machine:
      image: ubuntu-2204:2022.07.1
      docker_layer_caching: true
    resource_class: medium

# -------------------------------------------------------------------------------------
# Re-usable commands
# -------------------------------------------------------------------------------------
setup_cuda10_libs: &setup_cuda10_libs
  - run:
      name: Setup CUDA drivers and libraries
      working_directory: ~/
      command: |
        # ubuntu's default gcc9.3 is too recent for cuda10.2
        sudo apt-get update
        sudo apt-get install -y gcc-8 g++-8
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 10
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 20
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 20
        # download and install nvidia drivers, cuda, etc
        wget --quiet --no-clobber -P ~/nvidia-downloads https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run
        time sudo /bin/bash nvidia-downloads/cuda_10.2.89_440.33.01_linux.run --no-drm --silent --driver --toolkit
        sudo ldconfig /usr/local/cuda/lib64
        echo "Done installing NVIDIA drivers and CUDA libraries (10.2)"
        nvidia-smi

setup_cuda11_libs: &setup_cuda11_libs
  - run:
      name: Setup CUDA drivers and libraries
      working_directory: ~/
      command: |
        # download and install nvidia drivers, cuda, etc
        wget --quiet --no-clobber -P ~/nvidia-downloads https://developer.download.nvidia.com/compute/cuda/11.7.1/local_installers/cuda_11.7.1_515.65.01_linux.run
        time sudo /bin/bash nvidia-downloads/cuda_11.7.1_515.65.01_linux.run --no-drm --silent --driver --toolkit
        sudo ldconfig /usr/local/cuda/lib64
        echo "Done installing NVIDIA drivers and CUDA libraries (11.7)"
        nvidia-smi

install_recent_cmake_2004: &install_recent_cmake_2004
  - run:
      name: Installing recent CMake
      command: |
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
        sudo apt-get update
        sudo apt-get install -y cmake

install_openblas: &install_openblas
  - run:
      name: Installing OpenBLAS
      command: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev

setup_project_cuda: &setup_project_cuda
  - run:
      name: Setting up project (with Cuda)
      working_directory: ~/project
      command: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc

setup_project_nocuda: &setup_project_nocuda
  - run:
      name: Setting up project (without Cuda)
      working_directory: ~/project
      command: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBASPACHO_USE_CUBLAS=0

build_project: &build_project
  - run:
      name: Building project
      working_directory: ~/project
      command: |
        cmake --build build -- -j`nproc`

run_tests: &run_tests
  - run:
      name: Running tests
      working_directory: ~/project
      command: |
        ctest --test-dir build

# -------------------------------------------------------------------------------------
# Jobs
# -------------------------------------------------------------------------------------
jobs:
  unittests_gpu17_cuda10:
    executor: gpu_cuda10
    steps:
      - <<: *setup_cuda10_libs
      - <<: *install_recent_cmake_2004
      - <<: *install_openblas
      - checkout
      - <<: *setup_project_cuda
      - <<: *build_project
      - <<: *run_tests

  unittests_gpu17_cuda11:
    executor: gpu_cuda11
    steps:
      - <<: *setup_cuda11_libs
      - <<: *install_recent_cmake_2004
      - <<: *install_openblas
      - checkout
      - <<: *setup_project_cuda
      - <<: *build_project
      - <<: *run_tests

  unittests_cpu:
    executor: cpu_only
    steps:
      - <<: *install_openblas
      - checkout
      - <<: *setup_project_nocuda
      - <<: *build_project
      - <<: *run_tests

workflows:
  version: 2
  build:
    jobs:
      - unittests_gpu17_cuda10
      - unittests_gpu17_cuda11
      - unittests_cpu
