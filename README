BaSpaCho (*Ba*tched *Spa*rse *Cho*lesky) is a library for batched, sparse Cholesky
decomposition and solving of linear systems, with support for Cuda.

# Required libraries:
* BLAS
* AMD, from SuiteSparse
* CHOLMOD (only for comparison benchmarks and tests)
Libraries fetched automatical by build:
* glog (CHECK macros are handy)
* gtest
* Eigen
* Sophus (only used in BA demo)

# Blas
The library used is specified in the CMake variable BLA_VENDOR,
a few possibilities are:
* ATLAS
* OpenBLAS
* Intel10_64{i}lp{_seq}
  (if 'i' indices are 64bits, if '_seq' sequential ie single thread)
For the full list check CMake docs at:
https://cmake.org/cmake/help/latest/module/FindBLAS.html#blas-lapack-vendors

Configuring with system blas (eg OpenBLAS):
  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 
Configuring with MKL:
  . /opt/intel/oneapi/setvars.sh
  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBLA_VENDOR=Intel10_64lp
Compiling and testing:
  cmake --build build -v -- -j16 && ctest --test-dir build
Compiling and benchmarking:
  cmake --build build -v -- -j16 && build/bench
Show test:
  ctest --test-dir build --show-only

cmake --build build -v -- -j16 SparseStructureTest && ctest --test-dir build -R SparseStructure
cmake --build build -v -- -j16 BlockMatrixTest     && ctest --test-dir build -R BlockMatrix
cmake --build build -v -- -j16 FactorTest          && ctest --test-dir build -R Factor
cmake --build build -v -- -j16 EliminationTreeTest && ctest --test-dir build -R EliminationTree
cmake --build build -v -- -j16 SolveTest && ctest --test-dir build -R SolveTree
cmake --build build -v -- -j16 BAL_test && build/BAL_test ~/BAL/problem-13682-4456117-pre.txt
